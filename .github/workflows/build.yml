name: Build

on:
  push:
    branches:
      - "**"
    tags:
      - v*
    paths-ignore:
      - "**/*.md"
  pull_request:
    branches:
      - "**"
    paths-ignore:
      - "**/*.md"
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version type"
        required: true
        default: "minor"
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write

jobs:
  release:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Configure Git
        run: |
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "${{ github.actor }}"

      - name: Update changelog to the next ${{ github.event.inputs.version_type }} version
        run: |
          go run ./releaser/main.go update-changelog ${{ github.event.inputs.version_type }}

      - name: Extract new version from changelog
        id: version
        run: |
          # Extract the version from the first ## header in CHANGELOG.md
          NEW_VERSION=$(grep -m 1 "^## \[" CHANGELOG.md | sed 's/^## \[\([^]]*\)\].*/\1/')
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Stage and commit changes
        run: |
          git add CHANGELOG.md
          git commit -s -m "Prepare for the v${{ steps.version.outputs.new_version }} release"

      - name: Push commit
        run: |
          git push origin ${{ github.ref_name }}

  upload:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [release]

    steps:
      - uses: actions/checkout@v4

      - name: actions/upload-artifact@v4 (refs/heads)
        uses: actions/upload-artifact@v4
        if: github.event_name != 'workflow_dispatch'
        with:
          name: README.md
          path: README.md
          if-no-files-found: error

      - uses: actions/setup-go@v5
        if: github.event_name == 'workflow_dispatch'
        with:
          go-version: "1.24.3"

      - name: Generate release notes
        if: github.event_name == 'workflow_dispatch'
        run: |
          go run ./releaser/main.go generate-release-notes > release-notes.tmp

      - name: Print release notes
        if: github.event_name == 'workflow_dispatch'
        run: |
          cat release-notes.tmp

      - name: Get current date (workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        id: date
        run: echo "current_date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      # - name: Rename the binary to include the version number (workflow_dispatch)
      #   if: github.event_name == 'workflow_dispatch'
      #   run: |
      #     mv docker-language-server-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }} docker-language-server-${{ matrix.os }}-${{ matrix.arch }}-${{ steps.version.outputs.new_version }}${{ matrix.ext }}

      - name: actions/upload-artifact@v4 (workflow_dispatch)
        uses: actions/upload-artifact@v4
        if: github.event_name == 'workflow_dispatch'
        with:
          name: README.md
          path: README.md
          if-no-files-found: error

      - uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191 # v2.0.8 https://github.com/softprops/action-gh-release/commit/c062e08bd532815e2082a85e87e3ef29c3e6d191
        if: github.event_name == 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.release.outputs.new_version }}
          name: v${{ needs.release.outputs.new_version }} - ${{ steps.date.outputs.current_date }}
          body_path: release-notes.tmp
          files: README.md
          fail_on_unmatched_files: true
